extends ../../layout
block content
	div.w3-auto
		h2=title
		hr
		h4 Check/uncheck all members of a given subteam:
		div(class=`responsive-grid rg-4`)
			each subteam in subteams
				div(class="w3-padding w3-left-align")
					input(type="checkbox" class="w3-check subteamToggle" id=`toggleSubteam_${subteam.subteam_key}` data-pit-scout=(subteam.pit_scout) checked=(subteam.pit_scout) data-subteam-key=subteam.subteam_key)
					label(for=`toggleSubteam_${subteam.subteam_key}`) &nbsp;#{subteam.label}
		hr
		h4 Available potential scouters
			span(class="sprite sp-20 sp-info sp-inline w3-tooltip")
				span(class="w3-tooltiptext w3-medium") The scouters and members that appear in this list are only those who are <a class="link" href="/manage/members/present">marked as present</a>.
		form(action="/manage/assignments/matches/generate" method="post")
			div(class="responsive-grid rg-4 w3-left-align")
				each member in available
					div(class="w3-padding")
						input(type="checkbox" class="w3-check" name=`${member._id}|${member.name}` id='chk_'+member._id data-subteam-key=member.org_info.subteam_key)
						label(class="w3-text-white" for='chk_'+member._id) &nbsp;#{member.name}
							span(class="unimportant")  (#{member.org_info.subteam_key})
						br
			- var defaultBlockSize = 5;
			p
			label Allocate in blocks of&nbsp;
			select(class="theme-input theme-inline-padding w3-no-border" style="float: none" type="text" name="blockSize")
				each val in [1, 2, 3, 4, 5, 6, 7, 8]
					if( val == defaultBlockSize )
						option(value=val class="w3-bar-item" selected) #{val}
					else
						option(value=val class="w3-bar-item") #{val}
			label &nbsp;matches
			span(class="sprite sp-18 sp-help sp-inline w3-tooltip")
				span(class="w3-tooltiptext w3-left-align")
					ul
						li If you have only 6 assignees then they’ll be doing every match with no breaks.
						li If you have 12 assignees total, they’ll be doing N matches on, then N matches off, loop. Or if you have more than 12 assignees, they might occasionally get 2xN matches off. A suggested “N” is 5.
						li If you have 7 to 11 assignees, they will occasionally do 2xN matches on before getting N matches off. A suggested “N” is 3.

			p
			button(type="submit" class="w3-btn theme-submit") (Re)Allocate teams@matches to ASSIGNED + CHECKED
	script.
		let toggleSubteamCheckboxes = $('.subteamToggle');
		let pitScoutCheckboxes = $('[data-pit-scout]');
		
		//- Auto-check students who are in a pit-scout subteam
		for (let checkbox of pitScoutCheckboxes) {
			let subteam_key = checkbox.getAttribute('data-subteam-key');
			assert(subteam_key);
			checkStudentsOfSubteam(subteam_key, true);
		}
		
		toggleSubteamCheckboxes.on('click', function () {
			let subteam_key = this.getAttribute('data-subteam-key');
			checkStudentsOfSubteam(subteam_key, this.checked);
		})
		
		function checkStudentsOfSubteam(subteam_key, isChecked) {
			$(`[data-subteam-key="${subteam_key}"]`).prop('checked', isChecked);
		}
		
		function confirmThenPost(message, url) {
			Confirm.show(message).then((result) => {
				if (!result.cancelled) {
					$.post(url, 
						{}, 
						function( data, status ){
							if(data && data.message) {
								// error
								if (data.status && data.status >= 400)
									NotificationCard.error(data.message);
								// success/message
								else
									NotificationCard.show(data.message);
							}
						}
					);
				}
			})
		}
		
		function promptPass(message, url, numberDeleting){
			
			// Prompt user for their password
			PasswordPrompt.show(message + "\n\nTo continue, enter your password.")
				.then(result => {
					if (result.cancelled === false) {
						
						if (numberDeleting && numberDeleting > 0) {
							setTimeout(() => {
								//- make ABSOLUTE SURE THEY WANNA PROCEED if they're actually gonna delete data
								Confirm.show(`By proceeding, you will be *permanently deleting* the data from *${numberDeleting}* scouting assignments from _#{eventName}_. Are you sure you want to continue?`, {
									yesText: 'Yes, proceed',
									noText: 'Cancel',
									yesTimeout: 2000
								})
									.then(result2 => {
										if (result2.cancelled === false) {
											doPostWithPassword(url, result.password);
										}
									})
							}, 350);
						}
						else {
							// Send request immediately if the user didn't cancel & there's nothing to delete
							doPostWithPassword(url, result.password)
						}
					}
				});
		}
		
		function doPostWithPassword(url, password) {
			$.post(url, {
				password: password
			}, 
			function( data, status ){
				if(data && data.message) {
					// error
					if (data.status && data.status >= 400)
						NotificationCard.error(data.message);
					// success/message
					else
						NotificationCard.show(data.message);
				}
			});
		}