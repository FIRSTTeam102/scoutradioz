//-
	Org mgmt page for all matches (completed/incomplete) in current event. 
	Provides buttons to pull match data from TBA.
		PARAM
			matches		[Object Array] Every match for current event, from the matches collection.
		manage/currentevent.js		
		'/manage/currentevent/matches'
	//
extends ../../layout
block content
	style.
		html {
			overflow-x: visible;
		}
	form#updatematches(name="updatematches" method="post" action="/manage/currentevent/updatematches")
		button#btnSubmit(type="submit" class="w3-button theme-hover-white theme-submit w3-text-white") Update all matches
	p.info.w3-center Match data is shared among all organizations using Scoutradioz.
	p.info.w3-center To re-scout a replay match, click "Reset" on the match in the list.
	br
	if matches
		table(class="w3-table")
			tr
				th Lvl
				th #
				th Schedule
				th Actual
				th Blue
				th Score
				th Red
				th Score
				th Won?
				th Update
				th Reset
			each match in matches
				tr
					td= match.comp_level
					td= match.match_number
					td= zoneTime(1000 * match.time).toLocaleString(DateTime.DATETIME_SHORT)
					if match.actual_time
						td= zoneTime(1000 * match.actual_time).toLocaleString(DateTime.DATETIME_SHORT)
					else
						td
					td= match.alliances.blue.team_keys[0].substring(3)+', '+match.alliances.blue.team_keys[1].substring(3)+', '+match.alliances.blue.team_keys[2].substring(3)
					if (match.alliances.blue.score > -1)
						td= match.alliances.blue.score
					else
						td
					td= match.alliances.red.team_keys[0].substring(3)+', '+match.alliances.red.team_keys[1].substring(3)+', '+match.alliances.red.team_keys[2].substring(3)
					if (match.alliances.red.score > -1)
						td= match.alliances.red.score
					else
						td
					td= match.winning_alliance
					td
						button(class="w3-button theme-submit" onClick=`updateMatch('${match.key}')`) Update
					td
						button(class="w3-button theme-red" onClick=`resetMatch('${match.key}')`) Reset
	br
	form#resetmatches(name="resetmatches" method="post" action="/manage/currentevent/resetmatches")
	button#btnResetMatches(type="submit" class="w3-button theme-red strong w3-text-white") RESET ALL MATCHES
	form#updatematchdata(name="updatematchdata" method="post" action="/manage/currentevent/updatematch")
		input#updateMatchId(type="hidden", name="matchId")
	form#resetmatchdata(name="updatematchdata" method="post" action="/manage/currentevent/resetmatch")
		input#resetMatchId(type="hidden", name="matchId")
	br 
	script const numOrgsAtThisEvent = #{numOrgsAtThisEvent};
	script.
		$('#btnResetMatches').on('click', async () => {
			confirmIfOtherOrgs('reset match data', () => {
				$('#resetmatches').submit();
			})
		})
		function updateMatch(matchId)
		{
			console.log('matchId='+matchId);
			confirmIfOtherOrgs(`reset match "${matchId}"`, () => {
				document.getElementById("updateMatchId").value = matchId;
				document.getElementById("updatematchdata").submit();
			});
		}
		function resetMatch(matchId)
		{
			console.log('matchId='+matchId);
			confirmIfOtherOrgs(`reset match "${matchId}"`, () => {
				document.getElementById("resetMatchId").value = matchId;
				document.getElementById("resetmatchdata").submit();
			});
		}
		
		//- send a confirmation prompt for the requested action if there are other orgs at the event
		async function confirmIfOtherOrgs(action, cb) {
			if (numOrgsAtThisEvent > 1) {
				let result = await Confirm.show(`There is/are ${numOrgsAtThisEvent - 1} other org(s) at this event. Are you sure you want to ${action}?\n(it WILL affect them! Be careful!)`, {yesTimeout: 1000});
				if (result.cancelled === false) {
					cb();
				}
				else console.log('Cancelled');
			}
			else cb();
		}