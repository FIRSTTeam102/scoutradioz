//-
	Member management page for organization. Team admins can edit or add users 
	to their org.
		manage/members.js
		'/manage/members'
	//
extends ../../layout
block content
	h3=title
	h6
		i!=msgMarked('manage.members.clickUpdateReminder')
	//- div(class="w3-section") TODO JL: Increment/decrement # years on team
		h4 Batch actions
		div(class="gear-btn theme-submit w3-btn" id="incrementYears")
			span Increment # years
	div(class="w3-container w3-section")
		each members, role in membersByRole
			hr 
			div(class="w3-row")
				h4=role
				br.w3-hide-small
				if members.length == 0
					i!=msg('manage.members.noMembersOfType')
				else 
					//- Only show "table" headers if there are members to show
					div(class="w3-row w3-hide-small" id="title-row")
						div(class="w3-col m3 w3-padding-small actions")!=msg('actions')
						div(class="w3-rest")
							div(class="w3-col m4 w3-padding-small")!=msg('name')
							div(class="w3-col m3 w3-padding-small")!=msg('subteam')
							div(class="w3-col m2 w3-padding-small")!=msg('class')
							div(class="w3-col m2 w3-padding-small")!=msg('manage.members.permissionLevel')
							div(class="w3-col m1 w3-padding-small")!=msg('manage.members.yearsOnTeam')
			each member in members
				div(class="w3-row")
					div(class="w3-col s12 m0")
						hr
					form(id=`deleteMember${member._id}` action="/manage/members/deletemember" method="post")
						input(type="hidden" name="memberId" value=member._id)
					//delete button
					div(class="w3-col s5 mauto w3-padding-small" data-delete-button)
						//-2019-09-26 JL: Added str.replace to member.name in case there are apostrophes in the name
						button(class="w3-btn theme-red w3-block" onclick=`confirmDelete("${member.name}", "${member._id}")`)
							span(class="sprite sp-24 sp-inline sp-delete")
					//-updateMember submits to javascript func.
					form(id=`updateMember_${member._id}` update-member-form action=`javascript:updateMember('${member._id}')` method="post")
						input(type="hidden" name="memberId" value=member._id)
						//update button
						div(class="w3-col s7 mauto w3-padding-small" data-update-button)
							button(class="w3-btn theme-submit w3-block" type="submit")!=msg('update')
						div(class="w3-mobile w3-rest")
							//name
							div(class="w3-col m4 w3-padding-small")
								input(type="text" value=member.name name="name" class="w3-input theme-input w3-no-border theme-inline-padding")
							//subteam
							div(class="w3-col s6 m3 w3-padding-small")
								select(class="w3-select theme-input w3-no-border" name="subteam_key")
									//- 2019-9-26 JL: Now cycles through configured member "subteam" names, and gives options based on the configuration.
									//- 2023-02-11 JL: Added blank option so we can see which users have an invalid subteam key
									- subteams = config.subteams;
									option
									each option in subteams
										option(value=option.subteam_key selected=(member.org_info.subteam_key === option.subteam_key))= option.label
							//class
							div(class="w3-col s6 m2 w3-padding-small")
								select(class="w3-select theme-input w3-no-border" name="class_key")
									//- 2019-9-26 JL: Now cycles through configured member "class" names, and gives options based on the configured class names.
									- classes = config.classes;
									option 
									each option in classes
										option(value=option.class_key selected=(member.org_info.class_key == option.class_key))= option.label
							//role
							div(class="w3-col s6 m2 w3-padding-small")
								select(name="role_key" class="w3-select theme-input w3-no-border")
									each role in roles
										option(value=role.role_key selected=(member.role_key == role.role_key))= role.label
							//years
							div(class="w3-col s6 m1 w3-padding-small")
								input(type="number" value=member.org_info.years name="years" placeholder="Yrs. on team" class="w3-input theme-input w3-no-border theme-inline-padding")
			br 
		hr
		//new member
		div(class="w3-row")
			form#addMember(action="/manage/members/addmember" method="post")
				//submit
				div(class="w3-col m2 w3-padding-small")
					button(type="submit" class="w3-btn theme-submit w3-block")!=msg('add')
				//name
				div(class="w3-col m3 w3-padding-small")
					input(type="text" class="w3-input theme-input w3-block w3-no-border theme-inline-padding" name="name" placeholder="Name")
				//subteam
				div(class="w3-col s6 m2 w3-padding-small")
					select(name="subteam_key" class="w3-select theme-input w3-no-border")
						- subteams = config.subteams;
						each option in subteams
							option(value=option.subteam_key)= option.label
				//class
				div(class="w3-col s6 m2 w3-padding-small")
					select(name="class_key" class="w3-select theme-input w3-no-border")
						- classes = config.classes;
						each option in classes
							option(value=option.class_key)= option.label
				//role
				div(class="w3-col s6 m2 w3-padding-small")
					select(name="role_key" class="w3-select theme-input w3-no-border")
						each role in roles
							option(value=role.role_key)= role.label
				//years
				div(class="w3-col s6 m1 w3-padding-small")
					input(class="w3-input theme-input w3-no-border theme-inline-padding" name="years" type="number" placeholder="Yrs. on team")
		//add multiple members
		div(class='w3-row')
			h4!=msg('manage.members.addMultipleMembers')
		div(class='w3-row')
			form#addMembers(action='javascript:addMembers()' method='post')
				input#fileUpload(type='file' accept='.json,.csv,application/json,text/csv' class='w3-hide')
				div(class='w3-col m1 s6 w3-padding-small')
					button(type='submit' class='w3-btn theme-submit w3-block')!=msg('add')
				div(class='w3-padding-small w3-col m2 s6')
					label(for='fileUpload' class='w3-btn w3-block theme-submit')!=msg('manage.members.uploadAFile')
				div(class='w3-padding-small w3-col sauto')
					p#fileName!=msg('manage.members.noFileSelected')
		h6
			i!=msg('manage.members.teamAdminPasswordReminder')
			i 
				a(href='/manage/members/passwords' class="link")!=msg('manage.members.passwordAuditLink')
		input(type="hidden" name="selfUserId" value=user._id)
	script.
		$('#incrementYears').on('click', () => {
			doBatch('incrementYears', "Are you sure you want to perform this batch action (incrementing # years by 1)? THE PAGE WILL REFRESH AND YOUR CURRENT CHANGES WILL BE LOST.");
		});
		
		//- Make the update button flash on a member who has not yet been updated.
		$('input:visible,select:visible').on('change', (e) => {
			let thisUpdateButton = $(e.target).closest('form').find('button[type=submit]');
			thisUpdateButton.addClass('animate-outline');
		});

		$('#fileUpload').on('change', () => {
			const files = $('#fileUpload')[0].files;
			if (files.length > 0) {
				$('#fileName').text(files[0].name);
			}
		})

		function addMembers(event) {
			console.log(event);
			const file = $('#fileUpload')[0].files[0];
			if (!file) {
				NotificationCard.error('No file selected.');
				return;
			} else if (file.type !== 'application/json' && file.type !== 'text/csv') {
				NotificationCard.error('Invalid file type (must be JSON or CSV).');
				return;
			}
			file.text().then(text => {
				let toUpload = text;
				if (file.type === 'text/csv') {
					const output = [];
					let currLine = [];
					let currVal = '';
					let quoted = false;
					for (let i = 0; i < text.length; i++) {
						const currentChar = text[i];
						const nextChar = text[i + 1];
						if (currentChar === '"' && nextChar === '"') {
							currVal += '"';
							i++;
							continue;
						}
						if (currentChar === '"') {
							quoted = !quoted;
							continue;
						}
						if (currentChar === ',' && !quoted) {
							currLine.push(currVal);
							currVal = "";
							continue;
						}
						if ((currentChar === '\n' || currentChar === '\r') && !quoted) {
							if (currentChar === '\r' && nextChar === '\n') {
								i++;
							}
							currLine.push(currVal);
							if (currLine.length !== 5) {
								NotificationCard.error('Line wrong length.');
								return;
							}
							output.push({name: currLine[0], subteam_key: currLine[1], class_key: currLine[2], role_key: currLine[3], years: currLine[4]});
							currLine = [];
							currVal = '';
							continue;
						}
						currVal += currentChar;
					}
					currLine.push(currVal);
					if (currLine.length !== 5) {
						NotificationCard.error('Line wrong length.');
						return;
					}
					output.push({name: currLine[0], subteam_key: currLine[1], class_key: currLine[2], role_key: currLine[3], years: currLine[4]});
					toUpload = JSON.stringify(output);
				}
				$.post({
					url: '/manage/members/addmembers',
					data: toUpload,
					contentType: 'application/json',
				}).done(response => {
					if (response.status === 200) {
						NotificationCard.show(response.message);
						window.location.reload();
					} else {
						NotificationCard.error(response.message);
					}
				}).fail(() => {
					NotificationCard.error('Failed to upload members, perhaps due to a syntax error in the JSON file.');
				});
			});
		}
		
		function doBatch(key, question) {
			let doProceed = true;
			if (question) {
				doProceed = confirm(question);
			}
			$.post('/manage/members/batch?action=' + key)
				.done(message => {
					console.log(message);
				})
		}
		
		function confirmDelete(memberName, memberId){
			if(confirm('Delete member: "' + memberName + '"?')){
				console.log($("#deleteMemberForm"+ memberId))
				$("#deleteMember"+ memberId).submit();
			}
		}
		
		function updateMember( memberId ){
			
			//- If the user is updating their own information
			if (memberId === $('input[name="selfUserId"]').val()) {
				if (!confirm("Are you sure you want to edit yourself?")) {
					return;
				}
			}
			
			var memberForm = $(`#updateMember_${memberId}`);
			
			var memberFormContents = memberForm.serialize();
			
			$.post( '/manage/members/updatemember', memberFormContents, function(response){
				
				//This is the page-determined response status code
				if (response.status == 200) {
					NotificationCard.show(response.message);
					
					//- Now, clear the outline from the update button
					let thisUpdateButton = $(`#updateMember_${memberId}`).find('button[type=submit]');
					thisUpdateButton.removeClass('animate-outline');
				}
				else {
					NotificationCard.error(response.message);
				}
				
				setTimeout(function(){
					//window.location.href = window.location.href;
				}, 1000);
			})
		}
		
		onResize(() => {
			let btnDelete = $('[data-delete-button]');
			let btnUpdate = $('[data-update-button]');
			let width = btnDelete.outerWidth() + btnUpdate.outerWidth();
			$('.actions').css({
				width: width
			});
		})
