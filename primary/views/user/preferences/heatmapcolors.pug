//-
	User config page with checkboxes to choose which columns are visible in a report.
		PARAM
			title- title of the page
			heatMapOptions- all the possible color options
			rederectURL- page redirected back to when form is submitted
			defaultKey- which key is selected
		user.ts	
		'/user/preferences/heatmapcolors'
	//
extends ../../layout
block content
	h2!=msg('user.heatmapcolors.title')
	h6
		i!=msgMarked('user.heatmapcolors.intro')
	
	- var valStyle = 'w3-center w3-text-white'
	
	- function getValR(min, max, val, item) { if (min == max) return item.min.r; var thisVal = val; if (thisVal < min) thisVal = min; if (thisVal > max) thisVal = max; return ( Math.round(((thisVal - min)/(max - min)) * (item.max.r - item.min.r) + item.min.r) ) }
	- function getValG(min, max, val, item) { if (min == max) return item.min.g; var thisVal = val; if (thisVal < min) thisVal = min; if (thisVal > max) thisVal = max; return ( Math.round(((thisVal - min)/(max - min)) * (item.max.g - item.min.g) + item.min.g) ) }
	- function getValB(min, max, val, item) { if (min == max) return item.min.b; var thisVal = val; if (thisVal < min) thisVal = min; if (thisVal > max) thisVal = max; return ( Math.round(((thisVal - min)/(max - min)) * (item.max.b - item.min.b) + item.min.b) ) }

	style.
		.table-fixed {
			vertical-align: text-bottom;
			width: 50px;
		}
		.table-variable {
			vertical-align: text-bottom;
			width: #{colPercent}%;
		}


	form(action="/user/preferences/heatmapcolors" method="post")
		input(type="hidden" name="redirectURL" value=redirectURL)
		div(class="w3-section w3-auto")
			table(class="w3-table metricTable")
				tr
					th!=msg('user.heatmapcolors.name')
					th(width=300)
					th!=msg('user.heatmapcolors.sample')
		div(class="w3-section w3-auto" )
			table(class="w3-table metricTable" width=145)
				each item in heatMapOptions
					tr(data-for=`select_${item.key}`)
						td(width=100)
						td(width=100)
						each i in [9, 8, 7, 6, 5, 4, 3, 2, 1]
							td(height=30 width=40 class=`${valStyle}` style=`background-color: rgb(${getValR(1, 9, i, item)},${getValG(1, 9, i, item)},${getValB(1, 9, i, item)}`)= i
					tr(data-for=`select_${item.key}`) 
						td= item.name 
						td 
							input(type="radio" id=`select_${item.key}` name="heatMapSelection" value=item.key checked=(item.key==defaultKey))
						each i in [5, 2, 7, 4, 9, 1, 3, 8, 6]
							td(height=30 width=40 class=`${valStyle}` style=`background-color: rgb(${getValR(1, 9, i, item)},${getValG(1, 9, i, item)},${getValB(1, 9, i, item)})`)= i
					tr(data-for=`select_${item.key}`)
						td 
						td  
						each i in [1, 2, 3, 4, 5, 6, 7, 8, 9]
							td(height=30 width=40 class=`${valStyle}` style=`background-color: rgb(${getValR(1, 9, i, item)},${getValG(1, 9, i, item)},${getValB(1, 9, i, item)})`)= i
					tr 
					td(hight=15)
		input(class="w3-btn theme-submit" type='submit' value!=msg('scouting.submit'))
	script.
		//- Emulate "label(for=...)" behavior with a click handler
		$('[data-for]').on('click', function() {
			const id = $(this).attr('data-for');
			$('#' + id).prop('checked', true);
		});