//-
	Team Intel shows all useful info for a particular team.
		reports.js
		'/reports/teamintel'
			QUERY: team_key (Team key)
extends ../layout
block content
	include templates/heatmap
	include mixins/completedMatch
	- var aggRangeMap = [];
	for scoreItem in currentAggRanges
		- aggRangeMap[scoreItem.key] = scoreItem;
	div(class="w3-auto")
		h2 Team #{team.team_number}: #{team.nickname.replace(new RegExp(' ', 'g'), '\xa0')}
		if (ranking)
			h4(class="theme-text") Currently ranked ##{ranking.rank} <br> #{ranking.record.wins+'-'+ranking.record.losses+'-'+ranking.record.ties} record with #{ranking.extra_stats[0]} RP
		- var country = '';
		- if (team.country != 'USA') country = team.country;
		h4(class="theme-text w3-tooltip" style="font-style:italic") From: #{team.city}, #{team.state_prov} #{country}
			span(class="w3-tooltiptext w3-block" style="font-style:italic") #{team.name}
		if images 
			//-Main image
			if images.main
				a(href=images.main.lg)
					img(src=images.main.md alt="" class="w3-image team-image-lg")
			//-Smaller images
			div(style="width: 80%; margin: auto;")
				if images.a
					a(href=images.a.lg)
						img(src=images.a.sm alt="" class="w3-image team-image-sm")
				if images.b
					a(href=images.b.lg)
						img(src=images.b.sm alt="" class="w3-image team-image-sm")
				if images.b
					a(href=images.b.lg)
						img(src=images.b.sm alt="" class="w3-image team-image-sm")
		div(class="w3-padding")
			a(class="theme-link w3-btn" href=`/reports/upcoming?team_key=${team.key}`) Upcoming matches for team #{team.key.substring(3)}
		div(class="w3-padding")
			a(class="theme-link w3-btn" href=`/reports/teamintelhistory?team_key=${team.key}`) All data for Team #{team.key.substring(3)} from this year
		br 
		//-Pit scouting section
		div(class="w3-padding-small")
			button#PitScoutingButton(onClick="toggle('PitScoutingSection', this)" for="PitScoutingSection" class="w3-block w3-btn w3-no-outline w3-left-align w3-border-gray w3-border-bottom rounded-small") 
				span(class="w3-left") &#9660;&nbsp;
				span Show 
				span Pit Scouting
			div#PitScoutingSection(class="w3-container w3-hide")
				if (data)
					h1 Pit Scouting Info
					- var changeCount = -0.5;
					each element in layout
						- element.label = resolveLabelTemplate(element.label, team.key)
						case element.type
							when "checkbox"
								- if (data[element.id] != 0 && data[element.id] != '' && data[element.id] != null)
									h4(class="") #{element.label} <strong>Yes</strong>
								- else
									h4(class="") #{element.label} <strong>No</strong>
							when "counter"
							when "badcounter"
							when "multiselect"
							when "derived"
							when "textblock"
								- if (data[element.id] != 0 && data[element.id] != '' && data[element.id] != null)
									h4(class="") #{element.label} <strong>#{data[element.id]}</strong>
								- else
									h4(class="") #{element.label} <i>[no data]</i>
							when "h2"
								//- if (changeCount == 0)
									h4(class="") <i>(no change)</i>
								- changeCount = 0;
								br 
								div(class="theme-spacer")
								h2 #{element.label}
							when "h3"
								//- if (changeCount == 0)
									h4(class="") <i>(no change)</i>
								- changeCount = 0;
								br 
								div(class="theme-spacer")
								h3 #{element.label}
							when "spacer"
								br
					//- if (changeCount == 0)
						h4(class="theme-text") (no change)
					if (inTable)
						| </table>
				else
					h6 No pit scouting data yet - check back later
		//-Statistics section
		div(class="w3-padding-small")
			button#StatisticsButton(onClick="toggle('StatisticsSection', this)" for="StatisticsSection" class="w3-block w3-btn w3-no-outline w3-left-align w3-border-gray w3-border-bottom rounded-small") 
				span(class="w3-left") &#9660;&nbsp;
				span Show 
				span Statistics
			div#StatisticsSection(class="w3-container w3-hide")
				if (aggdata)
					h2(class="theme-text") Statistics for #{team.key.replace('frc','team ')}
					h6 <i>Click on a metric to compare vs. other teams</i>
					table(class="w3-table")
						tr
							th Metric
							th(class="w3-right-align") Min
							th(class="w3-right-align") Avg
							th(class="w3-right-align") Var
							th(class="w3-right-align") Max
						each agg in aggdata
							tr
								- var text = agg.key; var result1 = text.replace( /([A-Z])/g, " $1" ); var result2 = result1.charAt(0).toUpperCase() + result1.slice(1)
								td(class="theme-text w3-small")
									//-2019-4-02 JL: Custom "top" so it's inline with the data
									a(style="position:relative;top:3px;" href=`/reports/metricintel?key=${agg.key}`)= result2
								- var minCol = 'w3-right-align w3-text-white'
								- if (agg.min == 0) minCol = 'w3-right-align w3-text-gray'
								- var avgCol = 'w3-right-align w3-text-white'
								- if (agg.avg == 0) avgCol = 'w3-right-align w3-text-gray'
								- var varCol = 'w3-right-align w3-text-white'
								- if (agg.var == 0) varCol = 'w3-right-align w3-text-gray'
								- var maxCol = 'w3-right-align w3-text-white'
								- if (agg.max == 0) maxCol = 'w3-right-align w3-text-gray'
								if (aggRangeMap[agg.key])
									td(class=`${minCol}` style=`background-color: rgb(${getValR(aggRangeMap[agg.key].MINmin, aggRangeMap[agg.key].MINmax, agg.min)},${getValG(aggRangeMap[agg.key].MINmin, aggRangeMap[agg.key].MINmax, agg.min)},${getValB(aggRangeMap[agg.key].MINmin, aggRangeMap[agg.key].MINmax, agg.min)})`)= agg.min
									td(class=`${avgCol}` style=`background-color: rgb(${getValR(aggRangeMap[agg.key].AVGmin, aggRangeMap[agg.key].AVGmax, agg.avg)},${getValG(aggRangeMap[agg.key].AVGmin, aggRangeMap[agg.key].AVGmax, agg.avg)},${getValB(aggRangeMap[agg.key].AVGmin, aggRangeMap[agg.key].AVGmax, agg.avg)})`)= agg.avg
									td(class=`${varCol}` style=`background-color: rgb(${getValR(aggRangeMap[agg.key].VARmin, aggRangeMap[agg.key].VARmax, agg.var)},${getValG(aggRangeMap[agg.key].VARmin, aggRangeMap[agg.key].VARmax, agg.var)},${getValB(aggRangeMap[agg.key].VARmin, aggRangeMap[agg.key].VARmax, agg.var)})`)= agg.var
									td(class=`${maxCol}` style=`background-color: rgb(${getValR(aggRangeMap[agg.key].MAXmin, aggRangeMap[agg.key].MAXmax, agg.max)},${getValG(aggRangeMap[agg.key].MAXmin, aggRangeMap[agg.key].MAXmax, agg.max)},${getValB(aggRangeMap[agg.key].MAXmin, aggRangeMap[agg.key].MAXmax, agg.max)})`)= agg.max
								else
									td(class=`${minCol}`)= agg.min
									td(class=`${avgCol}`)= agg.avg
									td(class=`${varCol}`)= agg.var
									td(class=`${maxCol}`)= agg.max
							//-2019-4-02 JL: Borders for row visibility
							tr(style="height:0px;")
								td(style="border-bottom: 1px solid #ffffff80; height: 0px; padding: 0;")
								td(style="padding:0;")
								td(style="padding:0;")
								td(style="padding:0;")
								td(style="padding:0;")
		//-Previous matches section
		div(class="w3-padding-small")
			button#PreviousMatchesButton(onClick="toggle('PreviousMatchesSection', this)" for="PreviousMatchesSection" class="w3-block w3-btn w3-no-outline w3-left-align w3-border-gray w3-border-bottom rounded-small") 
				span(class="w3-left") &#9660;&nbsp;
				span Show 
				span Previous Matches
			div#PreviousMatchesSection(class="w3-container w3-hide")
				style.
					.thick-border{
						border-width: 3px!important;
						margin-top: -2px;
						border-radius: 9px;
						border-color: #dfe1e9!important;
					}
				h2(class="theme-text") Previous matches
				//- for the comments
				- let isScouter = false; 
				- if (user && user.role.access_level >= Permissions.ACCESS_SCOUTER) isScouter = true;
				if (matches && matches.length > 0)		
					each match in matches
						if (match.scoringdata && isScouter)
							each element in scorelayout
								case element.type
									when "textblock"
										if (match.scoringdata[element.id])
											- element.label = resolveLabelTemplate(element.label, teamKey)
											h5(class="theme-text") #{element.label} <strong>#{match.scoringdata[element.id]}</strong>
				
				if (matches && matches.length > 0)		
					h6 <i>Click team number for match scouting details</i>
					h6 <i>Click match button for overall alliance performances</i>
					h6(class="theme-text")
						a(class="theme-link w3-btn" href="/reports/teamdata?team_key=" + team.key) Match Scouting data for all Team #{team.key.substring(3)} matches
					hr 
					
					each match in matches
						//include templates/completedMatch
						+completedMatch(match, undefined, team.key)
						if (match.scoringdata && isScouter)
							each element in scorelayout
								case element.type
									when "textblock"
										if (match.scoringdata[element.id])
											h5(class="theme-text") #{element.label} <strong>#{match.scoringdata[element.id]}</strong>
						hr
				else
					h6 No previous matches yet - check back later
	script.
		function toggle(sectionId, elem){
			//hide/show
			var x = document.getElementById(sectionId);
			if (x.className.indexOf("w3-show") == -1)
				x.className += " w3-show";
			else
				x.className = x.className.replace(" w3-show", "");
			
			//change text thingy
			var caret = elem.firstElementChild;//is span w/ caret
			var text = caret.nextElementSibling; //is main text
			
			text.innerText = (caret.innerText[0] == "▼") ? "Hide " : "Show ";
			caret.innerText = (caret.innerText[0] == "▼") ? "▲\xa0" : "▼\xa0";
			
		}
	if expandSection
		script.
			toggle("#{expandSection}", $("[for=#{expandSection}]")[0]);