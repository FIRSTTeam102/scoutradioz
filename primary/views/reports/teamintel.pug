//-
	Team Intel shows all useful info for a particular team.
		reports.js
		'/reports/teamintel'
			QUERY: team_key (Team key)
extends ../layout
block content
	include templates/heatmap
	include mixins/completedMatch
	include ../mixins/noDataFound
	include mixins/intelToggler
	- var teamNum = team.key.substring(3);
	- var aggRangeMap = [];
	for scoreItem in currentAggRanges
		- aggRangeMap[scoreItem.key] = scoreItem;
	div(class="w3-auto")
		h2!=msg('reports.teamHeader', {number: team.team_number, nick: team.nickname.replace(new RegExp(' ', 'g'), '\xa0')})
		if (ranking)
			h4(class="theme-text")!=msg('reports.teamRank', {rank: ranking.rank, rp: ranking.extra_stats[0], ...ranking.record})
		//- var country = '';
		//- if (team.country != 'USA') country = team.country;
		h4(class="theme-text w3-tooltip i")!=msg('reports.teamFrom', {city: team.city, state: team.state_prov, country: team.country})
			span(class="w3-tooltiptext w3-block i")=team.name
		if images 
			//-Main image
			if images.main
				a(href=images.main.lg)
					img(src=images.main.md alt="" class="w3-image team-image-lg")
			//-Smaller images
			div(style="width: 80%; margin: auto;")
				if images.a
					a(href=images.a.lg)
						img(src=images.a.sm alt="" class="w3-image team-image-sm")
				if images.b
					a(href=images.b.lg)
						img(src=images.b.sm alt="" class="w3-image team-image-sm")
				if images.b
					a(href=images.b.lg)
						img(src=images.b.sm alt="" class="w3-image team-image-sm")
		div(class="w3-padding")
			a(class="theme-link w3-btn" href="/reports/teamdata?team_key=" + team.key)!=msg('reports.teamAllMatchData', {team: team.key.substring(3)})
		div(class="w3-padding")
			a(class="theme-link w3-btn" href=`/reports/upcoming?team_key=${team.key}`)!=msg('reports.upcomingMatchesTeam', {team: teamNum})
		div(class="w3-padding")
			a(class="theme-link w3-btn" href=`/reports/teamintelhistory?team_key=${team.key}`)!=msg('reports.teamDataYear', {team: teamNum})
		//- for the comments
		//- 2024-02-12, M.O'C: Moved the 'isScouter' definition here for the first set of "super scout" notes
		- let isScouter = false; 
		- if (user && user.role.access_level >= Permissions.ACCESS_SCOUTER) isScouter = true;
		if isScouter && superData && superData.otherNotes
			div(style="white-space: pre-wrap;")
				i
					h3!=msg('scouting.supernotes', {team: teamNum})
					p= superData.otherNotes
		//-Pit scouting section
		div(class="w3-padding-small")
			+intelTogglerSectionHeader('reports.teamIntel.pitScouting')
			div#pitScoutingSection(class="w3-container w3-hide")
				if (data)
					//-h1 Pit Scouting Info
					- var changeCount = -0.5;
					each element in layout
						- element.label = resolveLabelTemplate(element.label, team.key)
						case element.type
							when "checkbox"
								- if (data[element.id] != 0 && data[element.id] != '' && data[element.id] != null)
									p #{element.label} <strong>!{msg('yes')}</strong>
								- else
									p #{element.label} <strong>!{msg('no')}</strong>
							when "header"
							when "h2"
								//- if (changeCount == 0)
									h4(class="") <i>(no change)</i>
								- changeCount = 0;
								br 
								div(class="theme-spacer")
								h4=element.label
							when "subheader"
							when "h3"
								//- if (changeCount == 0)
									h4(class="") <i>(no change)</i>
								- changeCount = 0;
								br 
								div(class="theme-label")
								h5=element.label
							when "spacer"
								br
							when "image"
								div(style="width:100%; margin-left:auto; margin-right:auto; display:block;")
									if orgImages[element.image_id]
										img(src=orgImages[element.image_id].md alt="" class="w3-image team-image-md")
									else
										h2(class="theme-text w3-padding-16 theme-header" id=element.id)
											b
												i=`MISSING IMAGE ID '${element.image_id}'`
							//- 2023-03-19 JL: Switched hardcoded counter/badcounter/derived/etc. to "default" to allow for new numerical types to be displayed
							default
								- if (data[element.id] != 0 && data[element.id] != '' && data[element.id] != null)
									p #{element.label} <strong>#{data[element.id]}</strong>
								- else
									p #{element.label} <i>!{msg('reports.noDataPlaceholder')}</i>
								
					//- if (changeCount == 0)
						h4(class="theme-text") (no change)
					if (inTable)
						| </table>
				else
					+noDataFound('!reports.noPitDataYet', true)
		//-Statistics section
		div(class="w3-padding-small")
			+intelTogglerSectionHeader('reports.teamIntel.statistics')
			div#statisticsSection(class="w3-container w3-hide")
				if (aggdata)
					h2(class="theme-text")!=msg('reports.teamStats', {team: team.key.substring(3)})
					h6.i!=msg('reports.metricClick')
					table(class="w3-table")
						tr
							th!=msg('metrics.metric')
							th(class="w3-right-align")!=msg('metrics.MIN1')
							th(class="w3-right-align")!=msg('metrics.AVG1')
							th(class="w3-right-align")!=msg('metrics.VAR1')
							th(class="w3-right-align")!=msg('metrics.MAX1')
						each agg in aggdata
							tr
								- var text = agg.key; var result1 = text.replace( /([A-Z])/g, " $1" ); var result2 = result1.charAt(0).toUpperCase() + result1.slice(1)
								td(class="theme-text w3-small")
									//-2019-4-02 JL: Custom "top" so it's inline with the data
									a(style="position:relative;top:3px;" href=`/reports/metricintel?key=${agg.key}`)= result2
								- var minCol = 'w3-right-align w3-text-white'
								- if (agg.min == 0) minCol = 'w3-right-align w3-text-gray'
								- var avgCol = 'w3-right-align w3-text-white'
								- if (agg.avg == 0) avgCol = 'w3-right-align w3-text-gray'
								- var varCol = 'w3-right-align w3-text-white'
								- if (agg.var == 0) varCol = 'w3-right-align w3-text-gray'
								- var maxCol = 'w3-right-align w3-text-white'
								- if (agg.max == 0) maxCol = 'w3-right-align w3-text-gray'
								if (aggRangeMap[agg.key])
									td(class=`${minCol}` style=`background-color: rgb(${getValR(aggRangeMap[agg.key].MINmin, aggRangeMap[agg.key].MINmax, agg.min)},${getValG(aggRangeMap[agg.key].MINmin, aggRangeMap[agg.key].MINmax, agg.min)},${getValB(aggRangeMap[agg.key].MINmin, aggRangeMap[agg.key].MINmax, agg.min)})`)= agg.min
									td(class=`${avgCol}` style=`background-color: rgb(${getValR(aggRangeMap[agg.key].AVGmin, aggRangeMap[agg.key].AVGmax, agg.avg)},${getValG(aggRangeMap[agg.key].AVGmin, aggRangeMap[agg.key].AVGmax, agg.avg)},${getValB(aggRangeMap[agg.key].AVGmin, aggRangeMap[agg.key].AVGmax, agg.avg)})`)= agg.avg
									td(class=`${varCol}` style=`background-color: rgb(${getValR(aggRangeMap[agg.key].VARmin, aggRangeMap[agg.key].VARmax, agg.var)},${getValG(aggRangeMap[agg.key].VARmin, aggRangeMap[agg.key].VARmax, agg.var)},${getValB(aggRangeMap[agg.key].VARmin, aggRangeMap[agg.key].VARmax, agg.var)})`)= agg.var
									td(class=`${maxCol}` style=`background-color: rgb(${getValR(aggRangeMap[agg.key].MAXmin, aggRangeMap[agg.key].MAXmax, agg.max)},${getValG(aggRangeMap[agg.key].MAXmin, aggRangeMap[agg.key].MAXmax, agg.max)},${getValB(aggRangeMap[agg.key].MAXmin, aggRangeMap[agg.key].MAXmax, agg.max)})`)= agg.max
								else
									td(class=`${minCol}`)= agg.min
									td(class=`${avgCol}`)= agg.avg
									td(class=`${varCol}`)= agg.var
									td(class=`${maxCol}`)= agg.max
							//-2019-4-02 JL: Borders for row visibility
							tr(style="height:0px;")
								td(style="border-bottom: 1px solid #ffffff80; height: 0px; padding: 0;")
								td(style="padding:0;")
								td(style="padding:0;")
								td(style="padding:0;")
								td(style="padding:0;")
		//-Previous matches section
		div(class="w3-padding-small")
			+intelTogglerSectionHeader('reports.teamIntel.previousMatches')
			div#previousMatchesSection(class="w3-container w3-hide")
				style.
					.thick-border{
						border-width: 3px!important;
						margin-top: -2px;
						border-radius: 9px;
						border-color: #dfe1e9!important;
					}
				if (matches && matches.length > 0)		
					each match in matches
						if (match.superdata && isScouter)
							h5(class="theme-text")!=msg('scouting.supermatchnotes')
								<strong> #{match.superdata['otherNotes']}</strong>
				if (matches && matches.length > 0)		
					each match in matches
						if (match.scoringdata && isScouter)
							each element in scorelayout
								case element.type
									when "textblock"
										if (match.scoringdata[element.id])
											- element.label = resolveLabelTemplate(element.label, teamKey)
											h5(class="theme-text") #{element.label} <strong>#{match.scoringdata[element.id]}</strong>
				
				if (matches && matches.length > 0)		
					h6.i!=msg('reports.teamMatchClick')
					h6.i!=msg('reports.overallMatchClick')
					h6(class="theme-text")
						a(class="theme-link w3-btn" href="/reports/teamdata?team_key=" + team.key)!=msg('reports.teamAllMatchData', {team: team.key.substring(3)})
					hr 
					
					each match in matches
						+completedMatch(match, undefined, team.key)
						if (match.superdata && isScouter)
							h5(class="theme-text")!=msg('scouting.supermatchnotes')
								<strong> #{match.superdata['otherNotes']}</strong>
						if (match.scoringdata && isScouter)
							each element in scorelayout
								case element.type
									when "textblock"
										if (match.scoringdata[element.id])
											h5(class="theme-text") #{element.label} <strong>#{match.scoringdata[element.id]}</strong>
						hr
				else
					+noDataFound('!reports.noPreviousMatchesYet', true)
	+intelTogglerJS(expandSection)