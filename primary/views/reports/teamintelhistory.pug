//-
	Team Intel History shows data for a particular team for the whole season.
		reports.js
		'/reports/teamintelhistory'
			QUERY: team_key (team key)
extends ../layout
block content
	include mixins/completedMatch
	div(class="w3-auto")
		h2 Team #{team.team_number}: #{team.nickname.replace(new RegExp(' ', 'g'), '\xa0')}
		if (ranking)
			h4 Currently ranked ##{ranking.rank} <br/> #{ranking.record.wins+'-'+ranking.record.losses+'-'+ranking.record.ties} record with #{ranking.extra_stats[0]} RP
		- var country = '';
		- if (team.country != 'USA') country = team.country;
		h4(class="theme-text" style="font-style:italic") From: #{team.city}, #{team.state_prov} #{country}
		h4(class="theme-text" style="font-style:italic") #{team.name}
		p
		script.
			function toggle(sectionId, elem){
				//hide/show
				var x = document.getElementById(sectionId);
				if (x.className.indexOf("w3-show") == -1)
					x.className += " w3-show";
				else
					x.className = x.className.replace(" w3-show", "");
				
				//change text thingy
				var caret = elem.firstElementChild;//is span w/ caret
				var text = caret.nextElementSibling; //is main text
				
				text.innerText = (caret.innerText[0] == "▼") ? "Hide " : "Show ";
				caret.innerText = (caret.innerText[0] == "▼") ? "▲\xa0" : "▼\xa0";
				
			}
		div(class="w3-padding-small")
			button#StatisticsButton(onClick="toggle('StatisticsSection', this)" class="w3-block w3-btn w3-left-align w3-border-gray w3-border-bottom rounded-small") 
				span(class="w3-left") &#9660;&nbsp;
				span Show 
				span Statistics Over Year #{year}
			div#StatisticsSection(class="w3-container w3-hide")
				if (aggdata)
					h2(class="theme-text") Historical statistics for #{team.key.replace('frc','team ')}
					table(class="w3-table")
						tr
							th Metric
							th(class="w3-right-align") Min
							th(class="w3-right-align") Avg
							th(class="w3-right-align") Var
							th(class="w3-right-align") Max
						each agg in aggdata
							tr
								- var text = agg.key; var result1 = text.replace( /([A-Z])/g, " $1" ); var result2 = result1.charAt(0).toUpperCase() + result1.slice(1)
								td(class="w3-text-light-gray w3-small")= result2
								- var minCol = 'w3-right-align w3-text-white'
								- if (agg.min == 0) minCol = 'w3-right-align w3-text-gray'
								td(class=`${minCol}`)= agg.min
								- var avgCol = 'w3-right-align w3-text-white'
								- if (agg.avg == 0) avgCol = 'w3-right-align w3-text-gray'
								td(class=`${avgCol}`)= agg.avg
								- var varCol = 'w3-right-align w3-text-white'
								- if (agg.var == 0) varCol = 'w3-right-align w3-text-gray'
								td(class=`${varCol}`)= agg.var
								- var maxCol = 'w3-right-align w3-text-white'
								- if (agg.max == 0) maxCol = 'w3-right-align w3-text-gray'
								td(class=`${maxCol}`)= agg.max
		div(class="w3-padding-small")
			button#PreviousMatchesButton(onClick="toggle('PreviousMatchesSection', this)" class="w3-block w3-btn w3-left-align w3-border-gray w3-border-bottom rounded-small") 
				span(class="w3-left") &#9660;&nbsp;
				span Show 
				span All Matches From Year #{year}
			div#PreviousMatchesSection(class="w3-container w3-hide")
				style.
					.thick-border{
						border-width: 3px!important;
						margin-top: -2px;
						border-radius: 9px;
						border-color: #dfe1e9!important;
					}
				h2(class="theme-text") ALL previous matches
				
				if (matches && matches.length > 0)		
					h6 <i>Click team number for match scouting details</i>
					h6 <i>Click match button for overall alliance performances</i>
					- var thisEventKey = '';
					each match in matches
						if (match.event_key != thisEventKey)
							- thisEventKey = match.event_key;
							br 
							if events && events[thisEventKey]
								h4 #{events[thisEventKey].year} #{events[thisEventKey].name}
							else
								h4(class="theme-text") #{thisEventKey}
							hr 
						//include templates/completedMatch
						+completedMatch(match, undefined, team.key)
						if (match.scoringdata && user && user.role.access_level >= Permissions.ACCESS_SCOUTER)
							each element in scorelayout
								case element.type
									when "textblock"
										if (match.scoringdata[element.id])
											h5(class="theme-text") #{element.label} <strong>#{match.scoringdata[element.id]}</strong>
						hr 
				else
					h6 No previous matches yet - check back later					