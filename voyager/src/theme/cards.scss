@use '@material/button/index' as mdc-button;
@use '@material/theme/color-palette';
@use '@material/shape' as mdc-shape;
@use '@material/theme';

@mixin container($card-width: 25em, $card-height: 10em) {
	margin: 0.5em auto;

	display: grid;
	grid-template-columns: repeat(auto-fit, minmax($card-width, 1fr));
	gap: 0.5em;
	justify-items: center;

	.mdc-card {
		min-width: $card-width;
		width: 100%;
		min-height: $card-height;
	}
}

// JL note: Svelte's new :global behavior makes it impossible to place this in an inline style tag 
.match-scouting-cards {
	@include container;

	.head {
		text-align: center;
	}

	h3 {
		margin: 0;
	}
	
	$red: color-palette.$red-900;
	$blue: color-palette.$blue-900;
	$grey: color-palette.$grey-700;

	.mdc-deprecated-list-item--selected {
		@include theme.property(--mdc-theme-primary, on-primary);
		border-radius: mdc-shape.$small-component-radius;
	}

	.red.incomplete {
		&.mdc-deprecated-list-item--selected {
			background: transparentize($red, 0.9);
		}
		.mdc-button {
			@include mdc-button.filled-accessible($red);
		}
	}
	.blue.incomplete {
		&.mdc-deprecated-list-item--selected {
			--mdc-theme-primary: $blue;
			background: transparentize($blue, 0.9);
		}
		.mdc-button {
			@include mdc-button.filled-accessible($blue);
		}
	}
	// JL note: not perfect, definitely wanna redo the styling, but it gets the idea across and it's really late
	.red.complete-locally {
		.mdc-button {
			@include mdc-button.ink-color($red);
			@include mdc-button.outline-color($red);
			@include mdc-button.filled-accessible(mix($red, $grey, 20%));
			border-style: dashed;
			border-width: 2px;
		}
	}
	.blue.complete-locally {
		.mdc-button {
			@include mdc-button.ink-color($blue);
			@include mdc-button.outline-color($blue);
			@include mdc-button.filled-accessible(mix($blue, $grey, 20%));
			border-style: dashed;
			border-width: 2px;
		}
	}
	.complete-and-synced {
		.mdc-button {
			@include mdc-button.filled-accessible($grey);
		}
	}
}
